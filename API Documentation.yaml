openapi: 3.0.0
info:
  title: LRS
  description: 
    OpenAPI SPEC for Learner Recommendation System for Software Engineering, IIT Madras
  version: 1.0.0
servers:
  - url: https://127.0.0.1:5000/api/
tags:
  - name: Student
    description: Everything about your students
  - name: Course
    description: Everything about the courses
  - name: Guidance
    description: Learning paths and recommendations
  - name: Admin
    description: Operations for admin
paths:
  /student/{student_id}:
    get:
      tags:
        - Student
      summary: Get student data
      description: Get student data by Id
      parameters:
        - name: student_id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Student fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'          
        '401':
          description: Unauthenticated
          content:
            application/json:
              example:
                message: Unauthenticated
        '404':
          description: Student not found
          content:
            application/json:
              example:
                message: Student not found
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Internal server error
      security:
        - api_key: []
  /courses:
    get:
      tags:
        - Course
      summary: List of courses
      description: List of courses
      responses:
        '200':
          description: Courses fetched successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Internal server error
  /course/{course_id}:
    get:
      tags:
        - Course
      summary: To get the course with ratings and feedbacks
      description: To get the course with ratings and feedbacks
      parameters:
        - name: course_id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Course fetched successfully
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Course'          
        '404':
          description: Course not found
          content:
            application/json:
              example:
                message: Course not found
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Internal server error
  /course/{course_id}/rating:
    post:
      tags:
        - Course
      summary: To give rating to a course
      description: To give rating to a course with course_id
      parameters:
        - name: course_id
          in: path
          required: true
          schema:
            type: integer
            example: 1
        - name: rating_type
          in: query
          description: The type of the rating
          required: true
          schema:
            type: string
            enum:
              - type1
              - type2
              - type3
        - name: rating_value
          in: query
          description: The value of the rating
          required: true
          schema:
            type: number
            example: 4.3
      responses:
        '201':
          description: Course rated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'  
        '401':
          description: Unauthenticated
          content:
            application/json:
              example:
                message: Unauthenticated
        '404':
          description: Course not found
          content:
            application/json:
              example:
                message: Course not found
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Internal server error
      security:
        - api_key: []
    put:
      tags:
        - Course
      summary: To edit rating to a course
      description: To edit rating to a course with course_id
      parameters:
        - name: course_id
          in: path
          required: true
          schema:
            type: integer
            example: 1
        - name: rating_type
          in: query
          description: The type of the rating
          required: true
          schema:
            type: string
            enum:
              - type1
              - type2
              - type3
        - name: rating_value
          in: query
          description: The value of the rating
          required: true
          schema:
            type: number
            example: 4.3
      responses:
        '201':
          description: Course rating edited successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        '401':
          description: Unauthenticated
          content:
            application/json:
              example:
                message: Unauthenticated
        '404':
          description: Course not found
          content:
            application/json:
              example:
                message: Course not found
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Internal server error
      security:
        - api_key: []
  /course/{course_id}/feedback:
    post:
      tags:
        - Course
      summary: To give feedback
      description: To give feedback for a course with course_id
      parameters:
        - name: course_id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                feedback: Course1 is good
      responses:
        '201':
          description: Course feedback posted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
        '401':
          description: Unauthenticated
          content:
            application/json:
              example:
                message: Unauthenticated
        '404':
          description: Course not found
          content:
            application/json:
              example:
                message: Course not found
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Internal server error
      security:
        - api_key: []
  /course/{course_id}/feedback/{feedback_id}:
    put:
      tags:
        - Course
      summary: To edit feedback
      description: To edit feedback for a course with course_id
      parameters:
        - name: course_id
          in: path
          required: true
          schema:
            type: integer
            example: 1
        - name: feedback_id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: 
                feedback: Course1 is good
      responses:
        '201':
          description: Course feedback edited successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
        '401':
          description: Unauthenticated
          content:
            application/json:
              example:
                message: Unauthenticated
        '404':
          description: Resource not found
          content:
            application/json:
              example:
                message: Course/Feedback not found
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Internal server error
      security:
        - api_key: []
    delete:
      tags:
        - Course
      summary: To delete the feedback
      description: To delete the feedback
      parameters:
        - name: course_id
          in: path
          required: true
          schema:
            type: integer
            example: 1
        - name: feedback_id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Course feedback deleted successfully
          content:
            application/json:
              example:
                message: Course feedback deleted successfully
        '401':
          description: Unauthenticated
          content:
            application/json:
              example:
                message: Unauthenticated
        '404':
          description: Resource not found
          content:
            application/json:
              example:
                message: Course/Feedback not found
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Internal server error
      security:
        - api_key: []
  /course/{course_id}/feedback/{feedback_id}/vote:  
    put:
      tags:
        - Course
      summary: To vote the feedback
      description: To vote the feedback
      parameters:
        - name: course_id
          in: path
          required: true
          schema:
            type: integer
            example: 1
        - name: feedback_id
          in: path
          required: true
          schema:
            type: integer
            example: 1
        - name: vote_type
          in: query
          required: true
          schema:
            type: string
            enum:
              - upvote
              - downvote
      responses:
        '201':
          description: Course feedback voted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
        '401':
          description: Unauthenticated
          content:
            application/json:
              example:
                message: Unauthenticated
        '404':
          description: Resource not found
          content:
            application/json:
              example:
                message: Course/Feedback not found
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Internal server error
      security:
        - api_key: []
  /learning_paths:  
    get:
      tags:
        - Guidance
      summary: List of learning paths
      description: List of learning paths
      responses:
        '200':
          description: Learning Paths fetched successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LearningPath'
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Internal server error
  /learning_path/{learning_path_id}:  
    put:
      tags:
        - Guidance
      summary: To upvote the learning path
      description: To upvote the learning path
      parameters:
        - name: learning_path_id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Learning path voted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LearningPath'
        '401':
          description: Unauthenticated
          content:
            application/json:
              example:
                message: Unauthenticated
        '404':
          description: Learning path not found
          content:
            application/json:
              example:
                message: Learning path not found
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Internal server error
      security:
        - api_key: []
  /recommendations:  
    get:
      tags:
        - Guidance
      summary: To get the recommendations
      description: To get the recommendations
      parameters:
        - name: rollno
          in: query
          required: true
          schema:
            type: string
            example: 21f1001346
        - name: domain
          in: query
          required: false
          schema:
            type: string
            enum:
              - Programming
              - Data Science
        - name: time
          in: query
          required: false
          schema:
            type: string
            enum:
              - "< 4 hrs"
              - 4 to 8 hrs
              - 8 to 12 hrs
              - "> 12 hrs"
        - name: courses
          in: query
          required: false
          schema:
            type: integer
            example: 3
      responses:
        '200':
          description: Recommendations generated successfully
          content:
            application/json:
              schema:
                type: object
                example: [course1, course2, course3]
        '404':
          description: Student not found
          content:
            application/json:
              example:
                message: Student not found
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Internal server error
  /admin/students:  
    get:
      tags:
        - Admin
      summary: To get the list of students
      description: To get the list of students
      responses:
        '200':
          description: Students fetched successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        '401':
          description: Unauthenticated
          content:
            application/json:
              example:
                message: Unauthenticated
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Internal server error
      security:
        - api_key: []
  /admin/student:
    post:
      tags:
        - Admin
      summary: To create a new student
      description: To create a new student
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '201':
          description: Student created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '401':
          description: Unauthenticated
          content:
            application/json:
              example:
                message: Unauthenticated
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Internal server error
      security:
        - api_key: []
  /admin/student/{student_id}:  
    get:
      tags:
        - Admin
      summary: To get the student with student_id
      description: To get the student with student_id
      parameters:
        - name: student_id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Student fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '401':
          description: Unauthenticated
          content:
            application/json:
              example:
                message: Unauthenticated
        '404':
          description: Student not found
          content:
            application/json:
              example:
                message: Student not found
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Internal server error
      security:
        - api_key: []
    put:
      tags:
        - Admin
      summary: To edit the student details with student_id
      description: To edit the student details with student_id
      parameters:
        - name: student_id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          applications/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '201':
          description: Student edited successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '401':
          description: Unauthenticated
          content:
            application/json:
              example:
                message: Unauthenticated
        '404':
          description: Student not found
          content:
            application/json:
              example:
                message: Student not found
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Internal server error
      security:
        - api_key: []
    delete:
      tags:
        - Admin
      summary: To delete the student
      description: To delete the student with student_id
      parameters:
        - name: student_id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Student deleted successfully
          content:
            application/json:
              example:
                message: Student deleted successfully
        '401':
          description: Unauthenticated
          content:
            application/json:
              example:
                message: Unauthenticated
        '404':
          description: Student not found
          content:
            application/json:
              example:
                message: Student not found
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Internal server error
      security:
        - api_key: []
    patch:
      tags:
        - Admin
      summary: To update the student score
      description: To edit the student score with student_id
      parameters:
        - name: student_id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          applications/json:
            schema:
              $ref: '#/components/schemas/Score'
      responses:
        '200':
          description: Student score updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Score'
        '401':
          description: Unauthenticated
          content:
            application/json:
              example:
                message: Unauthenticated
        '404':
          description: Student not found
          content:
            application/json:
              example:
                message: Student not found
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Internal server error
      security:
        - api_key: []
  /admin/import:
    post:
      tags:
        - Admin
      summary: To import the data
      description: To import the data
      responses:
        '200':
          description: Data imported successfully
          content:
            application/json:
              schema:
                type: object
                example: 
                  message: Data imported successfully
        '401':
          description: Unauthenticated
          content:
            application/json:
              example:
                message: Unauthenticated
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Internal server error
      security:
        - api_key: []
components:
  schemas:
    Student:
      type: object
      properties:
        id:
          type: integer
          example: 10
        name:
          type: string
          example: john doe
        rollno:
          type: string
          example: 21f1001346
        cgpa:
          type: number
          example: 9.02
        completed_courses:
          type: array
          items:
            $ref: '#/components/schemas/Course'
        current_courses:
          type: array
          items:
            $ref: '#/components/schemas/Course'
    Course:
      type: object
      properties:
        id:
          type: integer
          example: 1
        coursename:
          type: string
          example: course1
        coursecode:
          type: string
          example: cs3001
        rating:
          type: number
          example: 4.2
    Score:
      type: object
      properties:
        id:
          type: integer
          example: 1
        student_id:
          type: integer
          example: 1
        course_id:
          type: integer
          example: 2
        score:
          type: integer
          example: 89
    Feedback:
      type: object
      properties:
        id:
          type: integer
          example: 1
        feedback:
          type: string
          example: Course1 is good
        upvote:
          type: integer
          example: 3
        downvote:
          type: integer
          example: 2
        course_id:
          type: integer
          example: 1
    LearningPath:
      type: object
      properties:
        id:
          type: integer
          example: 1
        path:
          type: string
          example: Leaning Path
        upvote:
          type: integer
          example: 3
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header